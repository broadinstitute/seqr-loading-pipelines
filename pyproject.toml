[project]
name = "seqr-loading-pipeline"
dynamic = ['version']
requires-python = ">=3.10"

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
version = {attr = "v03_pipeline.__version__"}

[tool.setuptools.packages.find]
include = ["v03_pipeline*"]
exclude = ["v03_pipeline.bin", "v03_pipeline*test*"]
namespaces = false

[tool.black]
line-length = 88
skip-string-normalization = true
extend-exclude = '''
(
    download_and_create_reference_datasets/v02
    | gcloud_dataproc
    | hail_scripts/computed_fields
    | hail_scripts/elasticsearch
    | hail_scripts/update_models
    | hail_scripts/utils
    | kubernetes
    | luigi_pipeline/lib
    | luigi_pipeline/seqr.*\.py$
    | luigi_pipeline/tests/data
)
'''

[tool.isort]
include_trailing_comma = 'True'
known_external_package = ['hail_scripts']
line_length = 88
profile = 'black'
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'EXTERNAL_PACKAGE', 'FIRSTPARTY', 'LOCALFOLDER']
skip_glob = [
    'download_and_create_reference_datasets/v02/*',
    'gcloud_dataproc/*',
    'hail_scripts/computed_fields/*',
    'hail_scripts/elasticsearch/*',
    'hail_scripts/update_models/*',
    'hail_scripts/utils/*',
    'kubernetes/*'
]

[tool.mypy]
packages = 'v03_pipeline'
python_version = "3.10"
ignore_missing_imports = true
strict = true

[tool.ruff]
extend-exclude = [
    'download_and_create_reference_datasets/v02/*',
    'gcloud_dataproc/*',
    'hail_scripts/*',
    'kubernetes/*',
    'luigi_pipeline/lib/*',
    'luigi_pipeline/seqr*.py',
    'luigi_pipeline/tests/data/*',
    'v03_pipeline/lib/reference_data/gencode/*',
]
ignore = [
    # Individual Rules
    "E501",  # Black is less aggressive here when touching comments and strings, we're going to let those through.
    "G004",  # logging-f-string, these are fine for now

    # Rule Groupings
    "I",     # isort is enabled so this is unnecessary (for now, maybe we want to disable isort)
    "D",     # pydocstyle is for docs... we have none
    "FBT",   # flake-boolean-trap... disallows boolean args to functions... fixing this code will require refactors.
    "ANN",   # flake8-annotations is for typed code
    "DJ",    # django specific
    "T20",   # forbids print, we print quite a bit
    "PYI",   # pyi is typing stub files
    "PT",    # pytest specific
    "PTH",   # pathlib is preferred, but we're not using it yet
    "PD",    # pandas specific
    "NPY",   # numpy specific
    "TD",    # todos
    "FIX",   # fixmes
]
line-length = 88
select = [
    "ALL"
]
target-version = "py310"

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.per-file-ignores]
'*test*' = [
    'ARG002', # allow unused method arguments
    'SLF001', # allow private access
]

[tool.ruff.pylint]
max-args = 6
