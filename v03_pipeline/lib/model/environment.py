import os
from dataclasses import dataclass
from typing import Literal

# NB: using os.environ.get inside the dataclass defaults gives a lint error.
HAIL_TMP_DIR = os.environ.get('HAIL_TMP_DIR', '/tmp')  # noqa: S108
PIPELINE_DATA_DIR = os.environ.get(
    'PIPELINE_DATA_DIR',
    '/var/seqr/pipeline-data',
)
LOADING_DATASETS_DIR = os.environ.get(
    'LOADING_DATASETS_DIR',
    '/var/seqr/seqr-loading-temp',
)
PRIVATE_REFERENCE_DATASETS_DIR = os.environ.get(
    'PRIVATE_REFERENCE_DATASETS_DIR',
    '/var/seqr/seqr-reference-data-private',
)
REFERENCE_DATASETS_DIR = os.environ.get(
    'REFERENCE_DATASETS_DIR',
    '/var/seqr/seqr-reference-data',
)
VEP_REFERENCE_DATASETS_DIR = os.environ.get(
    'VEP_REFERENCE_DATASETS_DIR',
    '/var/seqr/vep-reference-data',
)
CLICKHOUSE_DATABASE = os.environ.get('CLICKHOUSE_DATABASE', 'seqr')
CLICKHOUSE_SERVICE_HOSTNAME = os.environ.get(
    'CLICKHOUSE_SERVICE_HOSTNAME',
    'localhost',
)
CLICKHOUSE_SERVICE_PORT = int(os.environ.get('CLICKHOUSE_SERVICE_PORT', '9000'))
CLICKHOUSE_WRITER_PASSWORD = os.environ.get(
    'CLICKHOUSE_WRITER_PASSWORD',
    'default_password',
)
CLICKHOUSE_WRITER_USER = os.environ.get('CLICKHOUSE_WRITER_USER', 'default')
CLINGEN_ALLELE_REGISTRY_LOGIN = os.environ.get('CLINGEN_ALLELE_REGISTRY_LOGIN', '')
CLINGEN_ALLELE_REGISTRY_PASSWORD = os.environ.get(
    'CLINGEN_ALLELE_REGISTRY_PASSWORD',
    '',
)
DEPLOYMENT_TYPE = os.environ.get('DEPLOYMENT_TYPE', 'prod')
GCLOUD_DATAPROC_SECONDARY_WORKERS = int(
    os.environ.get('GCLOUD_DATAPROC_SECONDARY_WORKERS', '5'),
)
GCLOUD_PROJECT = os.environ.get('GCLOUD_PROJECT')
GCLOUD_ZONE = os.environ.get('GCLOUD_ZONE')
GCLOUD_REGION = os.environ.get('GCLOUD_REGION')
PIPELINE_RUNNER_APP_VERSION = os.environ.get('PIPELINE_RUNNER_APP_VERSION', 'latest')
SAMPLE_TYPE_VALIDATION_EXCLUDED_PROJECTS = tuple(
    x
    for x in os.environ.get('SAMPLE_TYPE_VALIDATION_EXCLUDED_PROJECTS', '').split(',')
    if x
)
LOADING_QUEUE_LIMIT = int(os.environ.get('LOADING_QUEUE_LIMIT', '10'))
CLICKHOUSE_OPTIMIZE_TABLE_WAIT_S = int(
    os.environ.get('CLICKHOUSE_OPTIMIZE_TABLE_WAIT_S', '150'),
)


@dataclass
class Env:
    CLICKHOUSE_DATABASE: str = CLICKHOUSE_DATABASE
    CLICKHOUSE_OPTIMIZE_TABLE_WAIT_S: str = CLICKHOUSE_OPTIMIZE_TABLE_WAIT_S
    CLICKHOUSE_SERVICE_HOSTNAME: str = CLICKHOUSE_SERVICE_HOSTNAME
    CLICKHOUSE_SERVICE_PORT: int = CLICKHOUSE_SERVICE_PORT
    CLICKHOUSE_WRITER_PASSWORD: str = CLICKHOUSE_WRITER_PASSWORD
    CLICKHOUSE_WRITER_USER: str = CLICKHOUSE_WRITER_USER
    CLINGEN_ALLELE_REGISTRY_LOGIN: str | None = CLINGEN_ALLELE_REGISTRY_LOGIN
    CLINGEN_ALLELE_REGISTRY_PASSWORD: str | None = CLINGEN_ALLELE_REGISTRY_PASSWORD
    DEPLOYMENT_TYPE: Literal['dev', 'prod'] = DEPLOYMENT_TYPE
    GCLOUD_DATAPROC_SECONDARY_WORKERS: str = GCLOUD_DATAPROC_SECONDARY_WORKERS
    GCLOUD_PROJECT: str | None = GCLOUD_PROJECT
    GCLOUD_ZONE: str | None = GCLOUD_ZONE
    GCLOUD_REGION: str | None = GCLOUD_REGION
    HAIL_TMP_DIR: str = HAIL_TMP_DIR
    PIPELINE_DATA_DIR: str = PIPELINE_DATA_DIR
    LOADING_DATASETS_DIR: str = LOADING_DATASETS_DIR
    LOADING_QUEUE_LIMIT: int = LOADING_QUEUE_LIMIT
    PIPELINE_RUNNER_APP_VERSION: str = PIPELINE_RUNNER_APP_VERSION
    PRIVATE_REFERENCE_DATASETS_DIR: str = PRIVATE_REFERENCE_DATASETS_DIR
    REFERENCE_DATASETS_DIR: str = REFERENCE_DATASETS_DIR
    SAMPLE_TYPE_VALIDATION_EXCLUDED_PROJECTS: tuple[str] = (
        SAMPLE_TYPE_VALIDATION_EXCLUDED_PROJECTS
    )
    VEP_REFERENCE_DATASETS_DIR: str = VEP_REFERENCE_DATASETS_DIR
