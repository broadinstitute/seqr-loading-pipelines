import os
from dataclasses import dataclass

# Feature Flags
ACCESS_PRIVATE_REFERENCE_DATASETS = (
    os.environ.get('ACCESS_PRIVATE_REFERENCE_DATASETS') == '1'
)
CHECK_SEX_AND_RELATEDNESS = os.environ.get('CHECK_SEX_AND_RELATEDNESS') == '1'
EXPECT_TDR_METRICS = os.environ.get('EXPECT_TDR_METRICS') == '1'
EXPORT_TO_PARQUET = os.environ.get('EXPORT_TO_PARQUET') == '1'
INCLUDE_PIPELINE_VERSION_IN_PREFIX = (
    os.environ.get('INCLUDE_PIPELINE_VERSION_IN_PREFIX') == '1'
)
RUN_PIPELINE_ON_DATAPROC = os.environ.get('RUN_PIPELINE_ON_DATAPROC') == '1'
SHOULD_TRIGGER_HAIL_BACKEND_RELOAD = (
    os.environ.get('SHOULD_TRIGGER_HAIL_BACKEND_RELOAD') == '1'
)
STATIC_DB_ID_TO_GENE_ID = os.environ.get('STATIC_DB_ID_TO_GENE_ID') == '1'


@dataclass
class FeatureFlag:
    ACCESS_PRIVATE_REFERENCE_DATASETS: bool = ACCESS_PRIVATE_REFERENCE_DATASETS
    CHECK_SEX_AND_RELATEDNESS: bool = CHECK_SEX_AND_RELATEDNESS
    EXPECT_TDR_METRICS: bool = EXPECT_TDR_METRICS
    EXPORT_TO_PARQUET: bool = EXPORT_TO_PARQUET
    INCLUDE_PIPELINE_VERSION_IN_PREFIX: bool = INCLUDE_PIPELINE_VERSION_IN_PREFIX
    RUN_PIPELINE_ON_DATAPROC: bool = RUN_PIPELINE_ON_DATAPROC
    SHOULD_TRIGGER_HAIL_BACKEND_RELOAD: bool = SHOULD_TRIGGER_HAIL_BACKEND_RELOAD
    STATIC_DB_ID_TO_GENE_ID: bool = STATIC_DB_ID_TO_GENE_ID
